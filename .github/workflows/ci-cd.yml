name: Node.js Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: hello-docker-node
        run: npm install

      - name: Lint / Test
        working-directory: hello-docker-node
        run: npm test || echo "No tests configured"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest
          docker build -t $IMAGE_URI hello-docker-node
          docker push $IMAGE_URI

      - name: Terraform Plan
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform plan \
            -var="aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" \
            -var="ecr_repo=${{ secrets.ECR_REPO }}" \
            -var="key_name=${{ secrets.EC2_KEY_NAME }}" \
            -var="aws_region=${{ secrets.AWS_REGION }}"

      - name: Deploy with Terraform
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve \
            -var="aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" \
            -var="ecr_repo=${{ secrets.ECR_REPO }}" \
            -var="key_name=${{ secrets.EC2_KEY_NAME }}" \
            -var="aws_region=${{ secrets.AWS_REGION }}"