name: CICD - Deploy Infra with Terraform

on:
  workflow_dispatch: # Manual trigger
  # push:
  #   branches: [ "main" ]
  #   paths:
  #     - "infra/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: 🪣 Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: 🧩 Set dynamic image tag
        run: echo "IMAGE_TAG=node-$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: 🧪 Terraform Plan
        working-directory: ./infra
        run: terraform plan \
          -var="key_name=${{ secrets.EC2_KEY_NAME }}" \
          -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: 🚀 Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve \
          -var="key_name=${{ secrets.EC2_KEY_NAME }}" \
          -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: 🌍 Output Web Server Public IP
        id: tf_output
        working-directory: ./infra
        run: |
          echo "📡 Getting web server public IP..."

          # Run Terraform output and display for debug
          terraform output web_public_ip || echo "⚠️ Terraform output failed"

          # Extract valid IPv4 address
          IP=$(terraform output web_public_ip | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | tail -n1)

          if [[ -z "$IP" ]]; then
            echo "❌ No valid IP found in Terraform output."
            exit 1
          fi

          echo "✅ Found valid IP: $IP"
          echo "web_ip=$IP" >> $GITHUB_ENV

      - name: 🔐 Update GitHub Secret with EC2 Public IP
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "🔐 Updating EC2_PUBLIC_IP to $web_ip"
          gh auth status || gh auth login --with-token <<< "$GH_TOKEN"
          gh secret set EC2_PUBLIC_IP -b"$web_ip"
          echo "✅ GitHub secret EC2_PUBLIC_IP updated successfully!"

      - name: 🚦 Verify GitHub CLI Auth
        run: gh auth status
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: ✅ Display Deployment Info
        run: |
          echo "✅ Deployment complete!"
          echo "🌍 Public IP: $web_ip"

      - name: 🔁 Trigger Manage-Web workflow (optional)
        if: success()
        run: |
          echo "🚀 Triggering Manage-Web workflow to start web services..."
          gh workflow run "Manage Onwuachi Web Server" -f action=start
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: 📤 Set job output
        id: set_output
        run: echo "ip=${{ env.web_ip }}" >> $GITHUB_OUTPUT
